{"version":3,"file":"static/js/460.e796d4d5.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/App.styled.js","redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.15;\n  font-weight: 700;\n  letter-spacing: 0.03em;\n  text-align: center;\n  color: #dcdcdc; \n`;","import { Title } from './Section.styled';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n`;\n\nexport const FindInput = styled.input`\n  width: 95%;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px auto;\n  padding: 15px;\n  font-size: 20px;\n  color: black; \n`;","import { Label, FindInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onWrite = e => {\n    dispatch(filterChange(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <FindInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        onChange={onWrite}\n      />\n    </Label>\n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 24px;\n  line-height: 1.15;\n  padding: 10px 0;\n  letter-spacing: 0.05em;\n\n`;\n\nexport const Button = styled.button`\n  background-color: #EBEBEB;\n  border-radius: 4px;\n  border: 2px solid black;\n  display: inline-block;\n  cursor: pointer;\n  color: black;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 16px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: #B345FE;\n    color: #ffffff;\n  }\n`;\n\n","import { List, Item, Button } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsList = ({ contacts }) => {\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const FormContact = styled(FormikForm)`\n  padding: 15px 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: #EBEBEB;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n\n`;\n\nexport const ErrorText = styled(FormikErrorMessage)`\n  color: tomato;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n  color: black; \n`;\n\nexport const Input = styled(Field)`\n  all: unset;\n  display: flex;\n  border: 2px solid black;\n  margin: 10px 0;\n  padding: 15px;\n  font-size: 18px;\n  color: black; \n\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid #B345FE;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border-radius: 4px;\n  border: 2px solid black;\n  display: inline-block;\n  cursor: pointer;\n  color: black;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 37px;\n  text-decoration: none;\n  margin: 10px 0;\n\n  &:hover {\n    background-color: #B345FE;\n    color: #ffffff;\n  }\n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormContact,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n} from './ContactForm.styled.js';\n\nconst nameValidate =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phoneValidate = RegExp(\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{1,3}\\\\)[ \\\\-]*)|([0-9]{1,4})[ \\\\-]*)*?[0-9]{1,4}?[ \\\\-]*[0-9]{1,9}?$/\n);\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .matches(\n      nameValidate,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  phone: yup\n    .string()\n    .required()\n    .matches(\n      phoneValidate,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nexport const ContactForm = ({ handleSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormContact autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\"></Input>\n          <ErrorText component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"phone\"></Input>\n          <ErrorText component=\"div\" name=\"phone\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  margin: 0 auto;\n  padding: 0 15px;\n`;","export const selectContacts = state => state.phonebook.contacts.items;\nexport const selectisLoading = state => state.phonebook.contacts.isLoading;\nexport const selectError = state => state.phonebook.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};","import { Section } from '../components/Section/Section';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactsList } from 'components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Wrap } from '../components/App.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectisLoading,\n  selectError,\n  selectFilteredContacts,\n} from '../redux/contacts/selectors';\nimport { fetchContacts, addContact } from '../redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectisLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilteredContacts);\n\n  const newContact = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const existingContact = newContact(values);\n    if (existingContact) {\n      alert(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n      resetForm();\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrap>\n      <ContactForm handleSubmit={handleSubmit} />\n      <Filter />\n      <Section title={`Contacts list`}>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 && <ContactsList contacts={filter} />}\n      </Section>\n    </Wrap>\n  );\n}\n"],"names":["Title","styled","Section","title","children","Label","FindInput","Filter","dispatch","useDispatch","type","name","placeholder","onChange","e","filterChange","currentTarget","value","List","Item","Button","ContactsList","contacts","map","id","number","onClick","deleteContact","FormContact","FormikForm","ErrorText","FormikErrorMessage","Input","Field","phoneValidate","RegExp","schema","yup","shape","required","matches","phone","initialValues","ContactForm","handleSubmit","onSubmit","validationSchema","autoComplete","component","Wrap","selectContacts","state","phonebook","items","selectisLoading","isLoading","selectError","error","selectFilteredContacts","filter","selectFilter","contact","toLowerCase","includes","App","useSelector","useEffect","fetchContacts","values","resetForm","find","alert","addContact","length"],"sourceRoot":""}